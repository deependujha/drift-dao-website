import 'dotenv/config';
import './database/conn.js';
import express from 'express';
import nodemailer from 'nodemailer';
import cors from 'cors';
import { DAOModel } from './database/models/DAOSchema.js';

const PORT = process.env.PORT || 4000;
const app = express();

app.use(express.json());
app.use(cors());

// middlewares
const preventUnauthorizeAccess = async (req, res, next) => {
	const { authorized_access_token } = req.headers;
	// console.log('authorized_access_token: ', authorized_access_token);
	if (authorized_access_token == process.env.AUTHORIZED_ACCESS_TOKEN) {
		next();
	} else {
		res.send('You are not authorized to access the resources');
	}
};

app.use(preventUnauthorizeAccess);

app.get('/', (req, res) => {
	console.log(req.headers);
	res.send('hello world');
});

app.get('/dao', async (req, res) => {
	try {
		const result = await DAOModel.find();
		res.send(result);
	} catch (err) {
		res.sendStatus(400).send(`error occurred: ${err}`);
	}
});

app.post('/dao', async (req, res) => {
	try {
		const {
			dao_name,
			dao_short_desc,
			dao_desc,
			dao_logo,
			dao_chain,
			dao_creator_address,
		} = req.body;

		const newDao = new DAOModel({
			dao_name,
			dao_short_desc,
			dao_desc,
			dao_logo,
			dao_chain,
			dao_creator_address,
		});

		const savedDAO = await newDao.save();
		res.send(savedDAO);
	} catch (e) {
		res.send(e);
	}
});

app.get('/dao/:id', async (req, res) => {
	try {
		const result = await DAOModel.findOne({ _id: req.params.id });
		res.send(result);
	} catch (err) {
		res.sendStatus(400).send(`error occurred: ${err}`);
	}
});

app.post('/contactForm', async (req, res) => {
	const { name, email, message } = req.body;
	// console.log("name: ", name)
	// console.log("email: ", email)
	// console.log("message: ", message)
	try {
		// create reusable transporter object using the default SMTP transporttransport
		let transporter = nodemailer.createTransport({
			service: 'gmail',
			auth: {
				user: 'deependujha21@gmail.com', // sender's email address
				pass: process.env.NODE_MAILER_PASSWORD, // password generated by google for a custom app ->  https://security.google.com/settings/security/apppasswords
			},
		});

		// send mail with defined transport object
		let info = await transporter.sendMail({
			from: '"Drift-DAO ðŸš€ðŸ”¥" drift-dao@gmail.com', // sender address
			to: 'deependujha16@gmail.com, nkumar35101@gmail.com', // list of receivers
			subject: `Woohoo, ${name} filled the contact form @Drift-DAO`, // Subject line
			text: `Woohoo... ${name} - ${email} sent the message: ${message}`, // plain text body
			html: `<b>Woohoo..</b><p>${name} filled the form @Drift-DAO.</p><p><b>Name</b>:<b>${name}</b></p><p><b>Email</b>:<b>${email}</b></p><p><b>Message</b>:<b>${message}</b></p><br><i>Drift-DAO will go beyond the moon ðŸš€ðŸ”¥<i/>`, // html body
		});
		// console.log('email sent successfully');
		res.send('Email sent successfully');
	} catch (e) {
		// console.log(`error occurred: ${e}`);
		res.send(`error occurred: ${e}`);
	}
});

app.listen(PORT, () => {
	console.log(`App started on http://localhost:${PORT}`);
});
